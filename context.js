// Generated by CoffeeScript 1.4.0
var handler;

chrome.storage.onChanged.addListener(function(changes) {
  if (!changes.services) {
    return;
  }
  return chrome.runtime.sendMessage({
    action: 'services',
    text: changes.services
  });
});

handler = function(e, service) {
  var text, _i, _len, _ref, _results;
  _ref = e.selectionText.split(" ");
  _results = [];
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    text = _ref[_i];
    _results.push(chrome.runtime.sendMessage({
      action: 'resolve',
      service: e.menuItemId,
      text: text
    }));
  }
  return _results;
};

chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {
  var url;
  if (request.action !== 'openUrl') {
    return;
  }
  url = request.url;
  if (url !== "") {
    return chrome.tabs.create({
      url: url,
      active: false
    });
  }
});

chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {
  var label, parent, _i, _len, _ref, _results;
  if (request.action !== 'init_services') {
    return;
  }
  parent = chrome.contextMenus.create({
    contexts: ['selection'],
    title: "Open as",
    id: "oaparent"
  });
  _ref = request.services;
  _results = [];
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    label = _ref[_i];
    _results.push(chrome.contextMenus.create({
      contexts: ['selection'],
      title: label,
      id: label,
      onclick: handler,
      parentId: 'oaparent'
    }));
  }
  return _results;
});

window.init = function() {
  var default_services, services;
  default_services = "services = {\n  \"facebook object\": (id) -> \"https://graph.facebook.com/\#{id}\"\n}";
  return services = chrome.storage.local.get('services', function(val) {
    services = val.services || default_services;
    return chrome.runtime.sendMessage({
      action: 'services',
      text: services
    });
  });
};
